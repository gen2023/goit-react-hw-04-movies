{"version":3,"sources":["services/moviesApi.js","components/MoviesList/MoviesList.js","components/Notification/Notification.js","pages/HomePage.js"],"names":["axios","defaults","baseURL","key","getPopularMovie","get","then","response","data","results","getSearchMovie","query","getMovieDetails","movieId","getReviews","getCast","cast","withRouter","movies","url","location","map","id","title","to","pathname","state","from","Notification","message","HomePageView","error","moviesApi","setState","catch","this","MoviesList","routes","Component"],"mappings":"uLAEAA,IAAMC,SAASC,QAAf,+BAEA,IAAMC,EAAM,mCAEG,KACPC,gBADO,WACY,OAAD,oHACTJ,IACVK,IADU,sCACyBF,IACnCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAHZ,sFAMlBC,eAPO,SAOQC,GAAQ,OAAD,oHACbX,IACVK,IADU,gCAEgBF,EAFhB,iCAE4CQ,EAF5C,gCAIVL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WALR,sFAQtBG,gBAfO,SAeSC,GAAU,OAAD,oHAChBb,IACVK,IADU,iBACIQ,EADJ,oBACuBV,EADvB,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAHA,sFAMzBM,WArBO,SAqBID,GAAU,OAAD,oHACXb,IACVK,IADU,iBACIQ,EADJ,4BAC+BV,EAD/B,2BAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAHV,sFAKpBM,QA1BO,SA0BCF,GAAU,OAAD,oHACRb,IACVK,IADU,iBACIQ,EADJ,4BAC+BV,IACzCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKQ,QAHb,wF,oGCFVC,eA1BI,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SACjC,OACE,4BACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,wBAAIpB,IAAKmB,GACP,kBAAC,IAAD,CACEE,GAAI,CACFC,SAAS,GAAD,OAAKN,EAAL,YAAYG,GACpBI,MAAO,CACLC,KAAMP,KAITG,Y,mGCREK,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAMA,I,eCItCC,E,4MACJJ,MAAQ,CACNR,OAAQ,GACRa,MAAO,I,kEAGY,IAAD,OAClBC,IACG5B,kBACAE,MAAK,SAAAG,GACJ,EAAKwB,SAAS,CAAEf,OAAQT,OAEzByB,OAAM,SAAAH,GAAK,OAAI,EAAKE,SAAS,CAAEF,e,+BAG1B,IAAD,EACmBI,KAAKT,MAAvBR,EADD,EACCA,OAAQa,EADT,EACSA,MAChB,OACE,oCACGA,GAAS,kBAAC,EAAD,CAAcF,QAAO,iBAAYE,EAAMF,WAEjD,qDACEE,GAASb,GAAU,kBAACkB,EAAA,EAAD,CAAYlB,OAAQA,EAAQC,IAAKkB,IAAOnB,c,GAtB1CoB,aA4BZR","file":"static/js/6.5302cd13.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nconst key = '7d9df5dfa812832fa78dacf66d6dbcaa';\n\nexport default {\n  async getPopularMovie() {\n    return await axios\n      .get(`/trending/movie/day?api_key=${key}`)\n      .then(response => response.data.results);\n  },\n\n  async getSearchMovie(query) {\n    return await axios\n      .get(\n        `/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`,\n      )\n      .then(response => response.data.results);\n  },\n\n  async getMovieDetails(movieId) {\n    return await axios\n      .get(`/movie/${movieId}?api_key=${key}&language=en-US`)\n      .then(response => response.data);\n  },\n\n  async getReviews(movieId) {\n    return await axios\n      .get(`/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`)\n      .then(response => response.data.results);\n  },\n  async getCast(movieId) {\n    return await axios\n      .get(`/movie/${movieId}/credits?api_key=${key}`)\n      .then(response => response.data.cast);\n  },\n};\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies, url, location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link\n            to={{\n              pathname: `${url}/${id}`,\n              state: {\n                from: location,\n              },\n            }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  url: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n};\nexport default withRouter(MoviesList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <div>{message}</div>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport MoviesList from '../components/MoviesList';\nimport Notification from '../components/Notification';\n\nimport moviesApi from '../services/moviesApi';\nimport routes from '../routes';\n\nclass HomePageView extends Component {\n  state = {\n    movies: [],\n    error: '',\n  };\n\n  componentDidMount() {\n    moviesApi\n      .getPopularMovie()\n      .then(results => {\n        this.setState({ movies: results });\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n    const { movies, error } = this.state;\n    return (\n      <>\n        {error && <Notification message={`ERROR: ${error.message}`} />}\n\n        <h1>Popular movies today</h1>\n        {!error && movies && <MoviesList movies={movies} url={routes.movies} />}\n      </>\n    );\n  }\n}\n\nexport default HomePageView;\n"],"sourceRoot":""}