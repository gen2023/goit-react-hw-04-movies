{"version":3,"sources":["services/moviesApi.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MoviesPreview/MoviesPreview.js","components/Cast/Cast.js","components/Reviews/Reviews.js","pages/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","key","getPopularMovie","get","then","response","data","results","getSearchMovie","query","getMovieDetails","movieId","getReviews","getCast","cast","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MoviesPreview","poster_path","title","vote_average","overview","genres","release_date","className","src","alt","slice","map","genre","id","name","Cast","state","this","props","match","params","moviesApi","setState","catch","error","item","cast_id","profile_path","character","Component","Reviews","reviews","author","content","MovieDetailsPage","handleGoBack","location","history","from","routes","home","type","onClick","to","path","render"],"mappings":"uLAEAA,IAAMC,SAASC,QAAf,+BAEA,IAAMC,EAAM,mCAEG,KACPC,gBADO,WACY,OAAD,oHACTJ,IACVK,IADU,sCACyBF,IACnCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAHZ,sFAMlBC,eAPO,SAOQC,GAAQ,OAAD,oHACbX,IACVK,IADU,gCAEgBF,EAFhB,iCAE4CQ,EAF5C,gCAIVL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WALR,sFAQtBG,gBAfO,SAeSC,GAAU,OAAD,oHAChBb,IACVK,IADU,iBACIQ,EADJ,oBACuBV,EADvB,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAHA,sFAMzBM,WArBO,SAqBID,GAAU,OAAD,oHACXb,IACVK,IADU,iBACIQ,EADJ,4BAC+BV,EAD/B,2BAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAHV,sFAKpBM,QA1BO,SA0BCF,GAAU,OAAD,oHACRb,IACVK,IADU,iBACIQ,EADJ,4BAC+BV,IACzCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKQ,QAHb,wF,sGChCV,SAASC,EAAgBC,EAAKf,EAAKgB,GAYhD,OAXIhB,KAAOe,EACTE,OAAOC,eAAeH,EAAKf,EAAK,CAC9BgB,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIf,GAAOgB,EAGND,ECVT,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUvC,GAC9C,EAAekC,EAAQlC,EAAKsC,EAAOtC,OAE5BiB,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUvC,GACxCiB,OAAOC,eAAegB,EAAQlC,EAAKiB,OAAOa,yBAAyBQ,EAAQtC,OAKjF,OAAOkC,E,0ECkBMQ,G,MA/CO,SAAC,GAOhB,IANLC,EAMI,EANJA,YACAC,EAKI,EALJA,MACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAC,EACI,EADJA,aAEA,OACE,oCACE,yBAAKC,UAAU,wBACZN,GACC,yBACEO,IAAG,yCAAoCP,GACvCQ,IAAKP,IAGT,yBAAKK,UAAU,wBACZD,GACC,4BACGJ,EADH,KACYI,EAAaI,MAAM,EAAG,GADlC,KAIF,0CAA+B,GAAfP,EAAhB,KACA,wCACA,2BAAIC,GACJ,sCACA,4BACGC,EAAOM,KAAI,SAAAC,GAAK,OACf,wBAAItD,IAAKsD,EAAMC,IAAKD,EAAME,e,QCqBzBC,G,kNAhDbC,MAAQ,CACN7C,KAAM,I,yLAIEH,EAAYiD,KAAKC,MAAMC,MAAMC,OAA7BpD,QAERqD,IACGnD,QAAQF,GACRP,MAAK,SAAAG,GACJ,EAAK0D,SAAS,CAAEnD,KAAMP,OAEvB2D,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,a,qIAG1B,IACArD,EAAS8C,KAAKD,MAAd7C,KACR,OACE,oCACE,yBAAKoC,UAAU,eACb,4BACGpC,EAAKwC,KAAI,SAAAc,GAAI,OACZ,wBAAInE,IAAKmE,EAAKC,SACXD,EAAKE,cACJ,yBACEnB,IAAG,wCAAmCiB,EAAKE,cAC3ClB,IAAKgB,EAAKG,YAGd,2BAAIH,EAAKX,MACT,yCAAeW,EAAKG,sB,GA/BjBC,cC6CJC,E,4MA7Cbd,MAAQ,CACNe,QAAS,I,yLAID/D,EAAYiD,KAAKC,MAAMC,MAAMC,OAA7BpD,QAERqD,IACGpD,WAAWD,GACXP,MAAK,SAAAG,GACJ,EAAK0D,SAAS,CAAES,QAASnE,OAE1B2D,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,a,qIAG1B,IACAO,EAAYd,KAAKD,MAAjBe,QAER,OACE,oCACGA,EAAQpC,OAAS,EAChB,4BACGoC,EAAQpB,KAAI,SAAAc,GAAI,OACf,wBAAInE,IAAKmE,EAAKZ,IACZ,uCAAaY,EAAKO,QAClB,2BAAIP,EAAKQ,cAKf,4E,GA/BYJ,a,OCOhBK,E,4MACJlB,MAAQ,CACNf,YAAa,KACbC,MAAO,KACPC,aAAc,KACdC,SAAU,KACVE,aAAc,KACdD,OAAQ,I,EAcV8B,aAAe,WAAO,IAAD,IACW,EAAKjB,MAA3BkB,EADW,EACXA,SADW,EACDC,QACVhD,MAAa,OAAR+C,QAAQ,IAARA,GAAA,UAAAA,EAAUpB,aAAV,eAAiBsB,OAAQC,IAAOC,O,yLAZrCxE,EAAYiD,KAAKC,MAAMC,MAAMC,OAA7BpD,QAERqD,IACGtD,gBAAgBC,GAChBP,MAAK,SAAAG,GACJ,EAAK0D,SAAL,KAAmB1D,OAEpB2D,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,a,qIAQ1B,IAAD,EASHP,KAAKD,MAPPf,EAFK,EAELA,YACAC,EAHK,EAGLA,MACAC,EAJK,EAILA,aACAC,EALK,EAKLA,SACAC,EANK,EAMLA,OACAQ,EAPK,EAOLA,GACAP,EARK,EAQLA,aAGF,OACE,oCACE,4BAAQmC,KAAK,SAASC,QAASzB,KAAKkB,cAApC,WAGClC,GACC,kBAAC,EAAD,CACEA,YAAaA,EACbC,MAAOA,EACPC,aAAcA,EACdC,SAAUA,EACVC,OAAQA,EACRC,aAAcA,IAGlB,6BACA,sDACA,kBAAC,IAAD,CAAMqC,GAAE,kBAAa9B,EAAb,UAAR,QACA,6BACA,kBAAC,IAAD,CAAM8B,GAAE,kBAAa9B,EAAb,aAAR,WACA,6BAEA,kBAAC,IAAD,CAAO+B,KAAML,IAAOxB,KAAM8B,OAAQ,SAAA3B,GAAK,OAAI,kBAAC,EAASA,MACrD,kBAAC,IAAD,CAAO0B,KAAML,IAAOT,QAASe,OAAQ,SAAA3B,GAAK,OAAI,kBAAC,EAAYA,W,GA5DpCW,aAgFhBK","file":"static/js/4.6bb95df6.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nconst key = '7d9df5dfa812832fa78dacf66d6dbcaa';\n\nexport default {\n  async getPopularMovie() {\n    return await axios\n      .get(`/trending/movie/day?api_key=${key}`)\n      .then(response => response.data.results);\n  },\n\n  async getSearchMovie(query) {\n    return await axios\n      .get(\n        `/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`,\n      )\n      .then(response => response.data.results);\n  },\n\n  async getMovieDetails(movieId) {\n    return await axios\n      .get(`/movie/${movieId}?api_key=${key}&language=en-US`)\n      .then(response => response.data);\n  },\n\n  async getReviews(movieId) {\n    return await axios\n      .get(`/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`)\n      .then(response => response.data.results);\n  },\n  async getCast(movieId) {\n    return await axios\n      .get(`/movie/${movieId}/credits?api_key=${key}`)\n      .then(response => response.data.cast);\n  },\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './moviesPreview.css';\n\nconst MoviesPreview = ({\n  poster_path,\n  title,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n}) => {\n  return (\n    <>\n      <div className=\"moviesPreviewContent\">\n        {poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt={title}\n          />\n        )}\n        <div className=\"moviesPreviewOptions\">\n          {release_date && (\n            <h2>\n              {title} ({release_date.slice(0, 4)})\n            </h2>\n          )}\n          <p>User Score: {vote_average * 10}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMoviesPreview.propTypes = {\n  poster_path: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  vote_average: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.object),\n  release_date: PropTypes.string.isRequired,\n};\n\nexport default MoviesPreview;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moviesApi from '../../services/moviesApi';\nimport './cast.css';\n\nclass Cast extends Component {\n  state = {\n    cast: [],\n  };\n\n  async componentDidMount() {\n    const { movieId } = this.props.match.params;\n\n    moviesApi\n      .getCast(movieId)\n      .then(results => {\n        this.setState({ cast: results });\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n    const { cast } = this.state;\n    return (\n      <>\n        <div className=\"castContent\">\n          <ul>\n            {cast.map(item => (\n              <li key={item.cast_id}>\n                {item.profile_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w92${item.profile_path}`}\n                    alt={item.character}\n                  />\n                )}\n                <p>{item.name}</p>\n                <p>Character: {item.character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n\nCast.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string,\n    }).isRequired,\n  }),\n};\n\nexport default Cast;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moviesApi from '../../services/moviesApi';\n\nclass Reviews extends Component {\n  state = {\n    reviews: [],\n  };\n\n  async componentDidMount() {\n    const { movieId } = this.props.match.params;\n\n    moviesApi\n      .getReviews(movieId)\n      .then(results => {\n        this.setState({ reviews: results });\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map(item => (\n              <li key={item.id}>\n                <h3>Author: {item.author}</h3>\n                <p>{item.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don`t have any reviews for this movie</p>\n        )}\n      </>\n    );\n  }\n}\n\nReviews.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Reviews;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\n\nimport MoviesPreview from '../components/MoviesPreview';\nimport Cast from '../components/Cast';\nimport Reviews from '../components/Reviews';\n\nimport moviesApi from '../services/moviesApi';\nimport routes from '../routes';\n\nclass MovieDetailsPage extends Component {\n  state = {\n    poster_path: null,\n    title: null,\n    vote_average: null,\n    overview: null,\n    release_date: null,\n    genres: [],\n  };\n\n  async componentDidMount() {\n    const { movieId } = this.props.match.params;\n\n    moviesApi\n      .getMovieDetails(movieId)\n      .then(results => {\n        this.setState({ ...results });\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  handleGoBack = () => {\n    const { location, history } = this.props;\n    history.push(location?.state?.from || routes.home);\n  };\n\n  render() {\n    const {\n      poster_path,\n      title,\n      vote_average,\n      overview,\n      genres,\n      id,\n      release_date,\n    } = this.state;\n\n    return (\n      <>\n        <button type=\"button\" onClick={this.handleGoBack}>\n          GO BACK\n        </button>\n        {poster_path && (\n          <MoviesPreview\n            poster_path={poster_path}\n            title={title}\n            vote_average={vote_average}\n            overview={overview}\n            genres={genres}\n            release_date={release_date}\n          />\n        )}\n        <hr />\n        <h3>Additional information</h3>\n        <Link to={`/movies/${id}/cast`}>cast</Link>\n        <br />\n        <Link to={`/movies/${id}/reviews`}>reviews</Link>\n        <hr />\n\n        <Route path={routes.Cast} render={props => <Cast {...props} />} />\n        <Route path={routes.Reviews} render={props => <Reviews {...props} />} />\n      </>\n    );\n  }\n}\n\nMovieDetailsPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      from: PropTypes.object.isRequired,\n    }),\n  }).isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}